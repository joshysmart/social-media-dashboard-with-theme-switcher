{"version":3,"sources":["components/Title.js","components/Tile.js","components/SocialMediaDashboard.js","components/OverviewTile.js","components/OverviewToday.js","components/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","style","bg","background","state","checked","head","color","p","borderBottomColor","toggle","backgroundImage","indicator","className","type","name","value","onChange","handleChange","Tile","before","site","arrow","up","src","icon","alt","username","followers","today","SocialMediaDashboard","OverviewTile","count","percent","OverviewToday","AppContainer","App","bind","e","target","this","setState","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec5a8254.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Title(props) {\r\n  const style = {\r\n   bg: {\r\n     background: props.state.checked ? '#f5f7ff' : '#1f212e'\r\n   },\r\n   head: {\r\n    color: props.state.checked ? '' : '#fff'\r\n   },\r\n\r\n   p: {\r\n    color: props.state.checked ? '' : '#8e91ba',\r\n    borderBottomColor: props.state.checked ? '' : '#373a4d'\r\n   },\r\n\r\n   toggle : {\r\n    backgroundImage: props.state.checked ? '' : 'linear-gradient(to right, #378fe6 , #3eda82)'\r\n   },\r\n\r\n   indicator: {\r\n    background: props.state.checked ? '' : '#1f212e'\r\n   }\r\n  }\r\n\r\n  return (\r\n    <div className=\"title-container\" style={style.bg}>\r\n      <div className=\"title\">\r\n        <h2 style={style.head}>Social Media Dashboard</h2>\r\n        <p style={style.p}>Total Followers: 23,004</p>\r\n      </div>\r\n      <div className=\"toggle-container\">\r\n        <label style={style.p}>Dark Mode\r\n          <div className=\"toggle\" style={style.toggle}>\r\n            <input className=\"toggle-state\" type=\"checkbox\" name=\"checked\" value=\"check\"  onChange={props.handleChange}/>\r\n            <div className=\"indicator\" style={style.indicator}></div>\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nfunction Tile(props) {\r\n const style = {\r\n  bg: {\r\n   background: props.state.checked ? '#f0f2fa' : '#252a41'\r\n  },\r\n\r\n  before: {\r\n   background: props.site === 'facebook' ? '#198ff5' : props.site === 'twitter' ? '#1ca0f2' : props.site === 'youtube' ? '#c4032a' : ''\r\n  },\r\n\r\n  head: {\r\n   color: props.state.checked ? '' : '#fff'\r\n  },\r\n\r\n  p: {\r\n   color: props.state.checked ? '' : '#8e91ba'\r\n\r\n  },\r\n\r\n  color: {\r\n   color: props.arrow.up ? props.site === 'facebook' ? props.state.checked ? '#1db489' : '' : '#dc414c' : '#1db489'\r\n  },\r\n }\r\n\r\n return (\r\n  <div className=\"tile\" style={style.bg}>\r\n   <div className=\"before\" style={style.before}></div>\r\n   <p className=\"username\" style={style.p}><img src={props.icon} alt=\"\" /> {props.username}</p>\r\n   <h2 style={style.head}>{props.followers}</h2>\r\n   <p className=\"followers\" style={style.p}>{props.type}</p>\r\n   <p style={style.color} \r\n   className={`date ${props.site === 'facebook' ? 'facebook' : ''}`} ><img src={props.arrow.icon} alt=\"\" /> {props.today}</p>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Tile;","import React from 'react';\r\nimport Title from './Title.js';\r\nimport Tile from './Tile.js';\r\n\r\nfunction SocialMediaDashboard(props) {\r\n return (\r\n  <div className=\"social-media-container\" >\r\n    <Title \r\n    handleChange={props.handleChange}\r\n    state = {props.state}\r\n    />\r\n   <div className=\"tile-container\">\r\n    <Tile\r\n     icon={'./img/icon-facebook.svg'}\r\n     username={'@nathanf'}\r\n     followers={'1987'}\r\n     type={'Followers'}\r\n     arrow={{icon: './img/icon-up.svg', up: true}}\r\n     today={'12 Today'}\r\n     site={'facebook'}\r\n     state = {props.state}\r\n    />\r\n    <Tile\r\n     state = {props.state}\r\n     icon={'./img/icon-twitter.svg'}\r\n     username={'@nathanf'}\r\n     followers={'1044'}\r\n     type={'Followers'}\r\n     arrow={{icon: './img/icon-up.svg', up: true}}\r\n     today={'99 Today'}\r\n     site={'twitter'}\r\n    />\r\n    <Tile\r\n     state = {props.state}\r\n     icon={'./img/icon-instagram.svg'}\r\n     username={'@realnathanf'}\r\n     followers={'11k'}\r\n     type={'Followers'}\r\n     arrow={{icon: './img/icon-up.svg', up: true}}\r\n     today={'1099 Today'}\r\n     site={'instagram'}\r\n    />\r\n    <Tile\r\n     state = {props.state}\r\n     icon={'./img/icon-youtube.svg'}\r\n     username={'Nathan F.'}\r\n     followers={'8239'}\r\n     type={'Subscribers'}\r\n     arrow={{icon: './img/icon-down.svg', up: false}}\r\n     today={'144 Today'}\r\n     site={'youtube'}\r\n    />\r\n   </div>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default SocialMediaDashboard;","import React from 'react';\r\n\r\nfunction OverviewTile(props) {\r\n\r\n const style = {\r\n  bg: {\r\n   background: props.state.checked ? '#f0f2fa' : '#252a41'\r\n  },\r\n \r\n  head: {\r\n   color: props.state.checked ?  '' : '#fff'\r\n  },\r\n \r\n  p: {\r\n   color: props.state.checked ?  '' : '#8e91ba'\r\n  }, \r\n  \r\n  color: {\r\n   color: props.arrow.up ? '#dc414c' : '#1db489'\r\n  },\r\n }\r\n\r\n return (\r\n  <div className=\"overview-tile\" style={style.bg}>\r\n   <p style={style.p} className=\"type\">{props.type} <img src={props.icon} alt=\"\" /></p>\r\n   <div className=\"count\">\r\n    <h3 style={style.head}>{props.count}</h3>\r\n    <p style={style.color}><img src={props.arrow.icon} alt=\"\" /> {props.percent}</p>\r\n   </div>\r\n  </div>\r\n )\r\n}\r\n\r\n\r\nexport default OverviewTile;","import React from 'react';\r\nimport OverviewTile from './OverviewTile.js';\r\n\r\nfunction OverviewToday(props) {\r\n const style = {\r\n  color: props.state.checked ? '' : '#fff'\r\n }\r\n\r\n return (\r\n  <div className=\"overview-container\" >\r\n   <h2 style={style}>Overview - Today</h2>\r\n   <div className=\"overview-tile-container\">\r\n    <OverviewTile\r\n     type={'Page Views'}\r\n     icon={'./img/icon-facebook.svg'}\r\n     count={87}\r\n     arrow={{ icon: './img/icon-up.svg', up: true }}\r\n     percent={'3%'}\r\n     state = {props.state} \r\n    />\r\n    <OverviewTile\r\n     type={'Likes'}\r\n     icon={'./img/icon-facebook.svg'}\r\n     count={52}\r\n     arrow={{ icon: './img/icon-down.svg', up: false }}\r\n     percent={'2%'}\r\n     state = {props.state} \r\n    />\r\n    <OverviewTile\r\n     type={'Likes'}\r\n     icon={'./img/icon-instagram.svg'}\r\n     count={5462}\r\n     arrow={{ icon: './img/icon-up.svg', up: true }}\r\n     percent={'2257%'}\r\n     state = {props.state} \r\n    />\r\n    <OverviewTile\r\n     type={'Profile Views'}\r\n     icon={'./img/icon-instagram.svg'}\r\n     count={'52k'}\r\n     arrow={{ icon: './img/icon-up.svg', up: true }}\r\n     percent={'1375%'}\r\n     state = {props.state} \r\n    />\r\n    <OverviewTile\r\n     type={'Retweets'}\r\n     icon={'./img/icon-twitter.svg'}\r\n     count={'117'}\r\n     arrow={{ icon: './img/icon-up.svg', up: true }}\r\n     percent={'303%'}\r\n     state = {props.state} \r\n    />\r\n    <OverviewTile\r\n     type={'Likes'}\r\n     icon={'./img/icon-twitter.svg'}\r\n     count={'507'}\r\n     arrow={{ icon: './img/icon-up.svg', up: true }}\r\n     percent={'507%'}\r\n     state = {props.state} \r\n    />\r\n    <OverviewTile\r\n     type={'Likes'}\r\n     icon={'./img/icon-youtube.svg'}\r\n     count={'107'}\r\n     arrow={{ icon: './img/icon-down.svg', up: false }}\r\n     percent={'19%'}\r\n     state = {props.state} \r\n    />\r\n    <OverviewTile\r\n     type={'Total Views'}\r\n     icon={'./img/icon-youtube.svg'}\r\n     count={'1407'}\r\n     arrow={{ icon: './img/icon-down.svg', up: false }}\r\n     percent={'12%'}\r\n     state = {props.state} \r\n    />\r\n   </div>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default OverviewToday;\r\n","import React from 'react';\r\nimport SocialMediaDashboard from './SocialMediaDashboard.js';\r\nimport OverviewToday from './OverviewToday.js';\r\n\r\nfunction AppContainer(props) {\r\n const style = {\r\n  background: props.state.checked ? '' : '#1e202a'\r\n }\r\n\r\n return (\r\n  <div className=\"conatiner\"  style={style}>\r\n   <SocialMediaDashboard \r\n   handleChange={props.handleChange}\r\n   state={props.state}\r\n   />\r\n   <OverviewToday \r\n   state = {props.state} \r\n   />\r\n  </div>\r\n )\r\n}\r\n\r\nexport default AppContainer;","import React from 'react';\nimport AppContainer from './components/AppContainer.js';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      checked: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const {name} = e.target;\n    this.setState({\n      [name]: !this.state.checked\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"wrapper\">\n        <AppContainer \n        handleChange={this.handleChange}\n        state={this.state}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}